#!/usr/bin/env node

"use strict"

function usage() {
    console.log(`usage: ${process.argv[1]} *bytecode* [*timeout*]

Run the Mythril Platform API analysis on *bytecode*. If a second
argument, *timeout* is given it is the amount of time, in milliseconds, to
wait for the analysis to complete.

Set environment variables EMAIL and MYTHRIL_API_KEY before using.
`)
    process.exit(1)
}

if (process.argv.length < 3) {
    console.log("Need to give bytecode")
    usage()
}

require('./helper')

const bytecode = process.argv[2]

var options = {
    apiKey: process.env.MYTHRIL_API_KEY,
    userEmail: process.env.EMAIL
}

var timeout = undefined
if (process.argv.length > 3) {
    timeout = parseInt(process.argv[3])
}

/**********************************
  Example code starts here.....
***********************************/

const armlet = require('../index') // if not installed
// const armlet = require('armlet') // if installed

const client = new armlet.Client(options)

client.analyze({ bytecode: bytecode, timeout: timeout }) // parameter "timeout" is optional
    .then(issues => {
        console.log(issues)
    }).catch(err => {
        console.log(err)
    })
